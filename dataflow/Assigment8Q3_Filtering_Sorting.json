{
	"name": "Assigment8Q3_Filtering_Sorting",
	"properties": {
		"description": "Assigment8Q3_Filtering_Sorting",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "RawCustomer_Data",
						"type": "DatasetReference"
					},
					"name": "CustTableDetails",
					"description": "Cust_Table_Details"
				},
				{
					"dataset": {
						"referenceName": "Raw_Cust_Address_CSV_DS",
						"type": "DatasetReference"
					},
					"name": "CustAddTableDetails",
					"description": "CustAddTableDetails"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ParquetDS",
						"type": "DatasetReference"
					},
					"name": "SinkBothDetails",
					"description": "SinkBothDetails"
				}
			],
			"transformations": [
				{
					"name": "JoinWithCustAddress",
					"description": "JoinWithCustAddress"
				},
				{
					"name": "filterCustomerDetails"
				},
				{
					"name": "sort1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as short,",
				"          NameStyle as boolean,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> CustTableDetails",
				"source(output(",
				"          CustomerID as short,",
				"          AddressID as short,",
				"          AddressType as string,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> CustAddTableDetails",
				"CustTableDetails, CustAddTableDetails join(CustTableDetails@CustomerID == CustAddTableDetails@CustomerID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinWithCustAddress",
				"JoinWithCustAddress filter(CustTableDetails@CustomerID > 1000 && CustTableDetails@CustomerID < 2000000) ~> filterCustomerDetails",
				"filterCustomerDetails sort(asc(CustTableDetails@CustomerID, true)) ~> sort1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SinkBothDetails"
			]
		}
	}
}